# import packages
import numpy as np
import csv
import pandas as pd

# this assumes the central index is of distance greater than 3 from either end
# finds the normalized amplitude for the given set of data
def maximum(time, position, central_index, normal):
    x = time[central_index - 3: central_index + 4]
    y = position[central_index - 3: central_index + 4]
    values = np.polyfit(x, y, 2)
    a = values[0]
    b = values[1]
    c = values[2]
    
    central_x = (-1.0 * b) / (2.0 * a)
    central_y = (a * pow(central_x, 2) + b * central_x + c)
    return [central_x, central_y]


# finds the times near the extrema for the given set of data
def findExtrema(time, position, velocity, normal):
    extrema = {}
    current_sign = int(velocity[0] / abs(velocity[0]))
    index = 0
    
    for item in velocity:
        if item == 0:
            continue
        if int(item / abs(item)) == (-1 * current_sign):   
            # add it to the list of indices
            temp = maximum(time, position, index, normal) # temp[0] = time, temp[1] = amplitude
            extrema[temp[0] + index / 100000000] = abs(temp[1]) # the addition of normal / 10000 is to prevent duplicate entries, change should be negligible
            # calculate the maximum
            current_sign = current_sign * -1
        index = index + 1
    return extrema

# data <- read in csv
path = open('C:\\Users\\melod\\2122\JTerm\\full_sets\\15cm_set.csv')
cartData = pd.read_csv(path)

time = cartData['r2t']

initial_displacement = 0.15

r1_p = cartData['r1p']
r2_p = cartData['r2p']
r3_p = cartData['r3p']
r4_p = cartData['r4p']
r5_p = cartData['r5p']
r6_p = cartData['r6p']
r7_p = cartData['r7p']
r8_p = cartData['r8p']
r9_p = cartData['r9p']
r10_p = cartData['r10p']
r11_p = cartData['r11p']
r12_p = cartData['r12p']
r13_p = cartData['r13p']
r14_p = cartData['r14p']
r15_p = cartData['r15p']

r1_v = cartData['r1v']
r2_v = cartData['r2v']
r3_v = cartData['r3v']
r4_v = cartData['r4v']
r5_v = cartData['r5v']
r6_v = cartData['r6v']
r7_v = cartData['r7v']
r8_v = cartData['r8v']
r9_v= cartData['r9v']
r10_v = cartData['r10v']
r11_v = cartData['r11v']
r12_v = cartData['r12v']
r13_v = cartData['r13v']
r14_v = cartData['r14v']
r15_v = cartData['r15v']

r1 = findExtrema(time, r1_p, r1_v, initial_displacement)
r2 = findExtrema(time, r2_p, r2_v, initial_displacement)
r3 = findExtrema(time, r3_p, r3_v, initial_displacement)
r4 = findExtrema(time, r4_p, r4_v, initial_displacement)
r5 = findExtrema(time, r5_p, r5_v, initial_displacement)
r6 = findExtrema(time, r6_p, r6_v, initial_displacement)
r7 = findExtrema(time, r7_p, r7_v, initial_displacement)
r8 = findExtrema(time, r8_p, r8_v, initial_displacement)
r9 = findExtrema(time, r9_p, r9_v, initial_displacement)
r10 = findExtrema(time, r10_p, r10_v, initial_displacement)
r11 = findExtrema(time, r11_p, r11_v, initial_displacement)
r12 = findExtrema(time, r12_p, r12_v, initial_displacement)
r13 = findExtrema(time, r13_p, r13_v, initial_displacement)
r14 = findExtrema(time, r14_p, r14_v, initial_displacement)
r15 = findExtrema(time, r15_p, r15_v, initial_displacement)
    
write_path = open('C:\\Users\\melod\\2122\JTerm\\regular_15cm_extrema.csv', 'w')

writer = csv.writer(write_path)

#print(len(fifteen))
#print(len(twenty))
#print(len(twenty_five))
#print(len(thirty))
#print(len(thirty_five))

for item in r1:
    writer.writerow([item, r1[item], 1])
    
for item in r2:
    writer.writerow([item, r2[item], 2])
    
for item in r3:
    writer.writerow([item, r3[item], 3])
    
for item in r4:
    writer.writerow([item, r4[item], 4])

for item in r5:
    writer.writerow([item, r5[item], 5])
    
for item in r6:
    writer.writerow([item, r6[item], 6])
    
for item in r7:
    writer.writerow([item, r7[item], 7])
    
for item in r8:
    writer.writerow([item, r8[item], 8])
    
for item in r9:
    writer.writerow([item, r9[item], 9])

for item in r10:
    writer.writerow([item, r10[item], 10])

for item in r11:
    writer.writerow([item, r11[item], 11])

for item in r12:
    writer.writerow([item, r12[item], 12])
    
for item in r13:
    writer.writerow([item, r13[item], 13])
    
for item in r14:
    writer.writerow([item, r14[item], 14])
    
for item in r15:
    writer.writerow([item, r15[item], 15])

path.close()
write_path.close()
